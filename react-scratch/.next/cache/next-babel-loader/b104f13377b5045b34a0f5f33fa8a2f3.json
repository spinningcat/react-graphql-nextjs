{"ast":null,"code":"function _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        {\\n            user {\\n                id\\n                firstname\\n                age\\n            }\\n        } \\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport gpl from \"graphql-tag\";\nimport Data from \"../pages/data\";\n\nvar ComingData = function ComingData() {\n  React.createElement(Query, {\n    query: gpl(_templateObject())\n  }, function (_ref) {\n    var loadPartialConfig = _ref.loadPartialConfig,\n        error = _ref.error,\n        data = _ref.data;\n    console.log(data);\n    /* if(loading){\n        return <p>Loading...</p>\n     }\n     if(error){\n         return <p>Error : (</p>\n     }\n     return data.user.map(({currentData}) =>\n         console.log(currentData),\n         <Data data={currentData} /> \n     ) */\n  });\n};\n\nexport default ComingData;","map":{"version":3,"sources":["/var/www/html/react-scratch/src/ComingData.js"],"names":["React","Query","gpl","Data","ComingData","loadPartialConfig","error","data","console","log"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAErB,sBAAC,KAAD;AAAO,IAAA,KAAK,EAAEF,GAAF;AAAZ,KAcC,gBAAsC;AAAA,QAApCG,iBAAoC,QAApCA,iBAAoC;AAAA,QAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,QAAVC,IAAU,QAAVA,IAAU;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;;;;;;;;;;AAUF,GA1BG;AA8BH,CAhCD;;AAiCA,eAAeH,UAAf","sourcesContent":["import React from \"react\"\nimport {Query} from \"react-apollo\"\nimport gpl from \"graphql-tag\"\nimport Data from \"../pages/data\"\n\n\n\nconst ComingData = () => {\n\n    <Query query={gpl`\n        {\n            user {\n                id\n                firstname\n                age\n            }\n        } \n        `\n        \n    }\n        \n    \n>\n    {({loadPartialConfig, error, data}) => {\n    console.log(data)\n   /* if(loading){\n       return <p>Loading...</p>\n    }\n    if(error){\n        return <p>Error : (</p>\n    }\n    return data.user.map(({currentData}) =>\n        console.log(currentData),\n        <Data data={currentData} /> \n    ) */\n}}   \n</Query>\n \n\n}\nexport default ComingData"]},"metadata":{},"sourceType":"module"}